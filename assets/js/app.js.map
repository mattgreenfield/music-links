{"version":3,"sources":["relationships.js","wikipedia.js","app.js"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["var linksData = [{\n        \"people\": [\"georgeHarrison\",\"paulMcCartney\",\"johnLennon\",\"ringoStarr\"],\n        \"description\": \"They are linked because they were all in The Beatles\"\n    },\n    {\n        \"people\": [\"paulWeller\",\"grahamCoxon\"],\n        \"description\": \"Worked together on the single 'This old town', release in....\"\n    },\n    {\n        \"people\": [\"grahamCoxon\",\"alexJames\",\"damonAlbarn\",\"daveRowntree\"],\n        \"description\": \"Members of britop sensation 'Blur'\"\n    },\n    {\n        \"people\": [\"bobbyWomack\",\"damonAlbarn\"],\n        \"description\": \"Worked together as part of 'Gorillaz'.\"\n    },\n    {\n        \"people\": [\"paulMcCartney\",\"kanyeWest\"],\n        \"description\": \"Recorded a single together'.\"\n    },\n    {\n        \"people\": [\"ericBibb\",\"steveSimpson\",\"daveBronze\"],\n        \"description\": \"Steve Simpson and Dave Bronze have toured together as the backing band for Eric Bibb\"\n    },\n    {\n        \"people\": [\"steveSimpson\",\"ronnieLane\"],\n        \"description\": \"Ronnie Lanes & Slim Chance\"\n    },\n    {\n        \"people\": [\"ronnieWood\",\"ronnieLane\",\"rodStewart\",\"ianMclagan\"],\n        \"description\": \"The Faces\"\n    },\n    {\n        \"people\": [\"steveMarriot\",\"ronnieLane\",\"ianMclagan\",\"kennyJones\",\"jimmyWinston\"],\n        \"description\": \"The Small Faces\"\n    },\n    {\n        \"people\": [\"ronnieWood\",\"jeffBeck\",\"rodStewart\"],\n        \"description\": \"The Jeff Beck Group\"\n    },\n    {\n        \"people\": [\"ericClapton\",\"jeffBeck\",\"jimmyPage\"],\n        \"description\": \"All members of The Yardbirds\"\n    },\n    {\n        \"people\": [\"steveWinwood\", \"jimCapaldi\", \"chrisWood\", \"daveMason\"],\n        \"description\": \"All members of Traffic\"\n    },\n    {\n        \"people\": [\"ericClapton\",\"jackBruce\",\"gingerBaker\"],\n        \"description\": \"All members of Cream\"\n    },\n    {\n        \"people\": [\"ericClapton\",\"steveWinwood\",\"gingerBaker\",\"ricGrech\"],\n        \"description\": \"All members of Blind Faith\"\n    },\n    {\n        \"people\": [\"johnMayer\",\"ericClapton\"],\n        \"description\": \"John Mayer has played at lots of Eric Claptons Crossroad Festivals\"\n    },\n    {\n        \"people\": [\"steveJordan\",\"ericClapton\"],\n        \"description\": \"Steve toured as Erics drummer for many years\"\n    },\n    {\n        \"people\": [\"johnMayer\",\"steveJordan\",\"pinoPalladino\"],\n        \"description\": \"The John Mayer Trio. They met...\"\n    },\n    {\n        \"people\": [\"questLove\",\"pinoPalladino\", \"dAngelo\"],\n        \"description\": \"Superjam\"\n    },\n    {\n        \"people\": [\"questLove\",\"elvisCostello\"],\n        \"description\": \"Made an albums together, 'Wise Up Ghost'\"\n    },\n    {\n        \"people\": [\"questLove\",\"bettyWright\"],\n        \"description\": \"Made an albums together, 'Betty Wright: The Movie'\"\n    },\n    {\n        \"people\": [\"jeffBeck\",\"pinoPalladino\"],\n        \"description\": \"In spring of 2006, Palladino toured with Jeff Beck. He appears on Jeff Beck's 2010 album, Emotion & Commotion. \"\n    },\n    {\n        \"people\": [\"jjCale\", \"ericClapton\", \"derekTrucks\", \"billyPreston\", \"pinoPalladino\"],\n        \"description\": \"The J. J. Cale, and Eric Clapton 2006 album The Road to Escondido,\"\n    },\n    {\n        \"people\": [\"ericClapton\",\"pinoPalladino\"],\n        \"description\": \"Palladino joined Eric Clapton's touring band for 11 dates in the Eastern US and Canada in May 2008.\"\n    },\n    {\n        \"people\": [\"herbieHancock\",\"pinoPalladino\"],\n        \"description\": \"As of August 2010, Palladino has been touring with Herbie Hancock.\"\n    },\n    {\n        \"people\": [\"steveGadd\",\"pinoPalladino\", \"edieBrickell\", \"andyFairweatherLow\"],\n        \"description\": \" recording with Steve Gadd; Edie Brickell; Andy Fairweather Low; who have formed a group the Gaddabouts.\"\n    },\n    {\n        \"people\": [\"pinoPalladino\", \"dAngelo\"],\n        \"description\": \"In January 2011, Palladino entered the studio with D'Angelo to finish recording the long overdue follow up to Voodoo.\"\n    },\n    {\n        \"people\": [\"pinoPalladino\", \"dAngelo\", \"chrisDave\", \"jesseJohnson\"],\n        \"description\": \"In January and February 2012, Palladino joined D'Angelo's live band for a short European tour, alongside drummer Chris 'Daddy' Dave and guitarist Jesse Johnson.\"\n    },\n    {\n        \"people\": [\"pinoPalladino\", \"adele\"],\n        \"description\": \"Palladino played on the second album of Adele: 21, released in 2011\"\n    },\n    {\n        \"people\": [\"pinoPalladino\", \"rogerDaltrey\"],\n        \"description\": \" In late 2012, Palladino toured with the Who on their Quadrophenia 'revival' tour\"\n    },\n    {\n        \"people\": [\"steveGadd\", \"paulSimon\"],\n        \"description\": \"Gadd is famous for playing the drums on Simon's '50 Ways to Leave Your Lover'. They also worked together on Simon & Garfunkel records.\"\n    },\n    {\n        \"people\": [\"steveGadd\", \"walterBecker\", \"donaldFagen\"],\n        \"description\": \"Gadd's drum solo on Steely Dan's 'Aja'.\"\n    },\n    {\n        \"people\": [\"steveGadd\", \"jamesTaylor\"],\n        \"description\": \"\"\n    },\n    {\n        \"people\": [\"steveGadd\", \"ericClapton\"],\n        \"description\": \"\"\n    },\n    {\n        \"people\": [\"steveGadd\", \"joeCocker\"],\n        \"description\": \"\"\n    },\n    {\n        \"people\": [\"steveGadd\", \"chichCorea\"],\n        \"description\": \"\"\n    },\n    {\n        \"people\": [\"donaldFagen\", \"steveJordan\"],\n        \"description\": \"Steve Jordan has drummed on a few of Fagens solo albums\"\n    }\n]\n","// Function to return info from wikipedia\nfunction wikiData(searchTerm, callBack) {\n\n    // replace spaces with %20 etc etc.\n    // var searchTerm = searchTerm.replace(\" \",\"\").toLowerCase();\n        // console.log(searchTerm);\n    var searchTerm = encodeURIComponent( camelToSpace(searchTerm) );\n\n    var article = {\n        name: \"\",\n        description: \"\",\n        url: \"\"\n    };\n\n    $.ajax({\n        // Search wikipedia for our term\n        url:'https://en.wikipedia.org/w/api.php?action=query&list=search&srsearch='+searchTerm+'%22AND%22Born%22AND%22music&format=jsonfm&srlimit=1',\n        data: {\n            format: 'json'\n        },\n        dataType: 'jsonp',\n        success: function(data) {\n\n            var article = {};\n\n            // Set the name and description as the result from wikipedia\n            article.name = data.query.search[0].title;\n            article.description = data.query.search[0].snippet.replace(/<(?:.|\\n)*?>/gm, '');\n            // @TODO Load the image\n\n            if( typeof(callBack)==='function'){\n                callBack(article);\n            }\n\n\n        },\n        type: 'GET'\n    });\n\n\n} // end function\n","\nvar currentlyDisplayedPeople = {};\n\nvar peopleData = {};\n\nfunction checkPeople(){\n\n    // Loop through all the relationships and add the people in them to the peopleData array (if they're not already in it).\n    for(var i = 0; i < linksData.length; i++){\n        var peopleInLink = linksData[i].people;\n        for(var a = 0; a < peopleInLink.length; a++){\n            var name = peopleInLink[a];\n            // console.log(name);\n            // If they aren't already in it...\n            if( !peopleData.hasOwnProperty(name) ){\n                // ...add this person to the peopleData object.\n                peopleData[name] = {\n                    \"picture\": \"http://www.clker.com/cliparts/A/Y/O/m/o/N/placeholder-hi.png\",\n                    \"name\": camelToSpace(name),\n                    \"about\": \"\"\n                };\n            }\n\n        }\n    }\n\n}\n\ncheckPeople();\nconsole.log(peopleData);\n\n\n// Function. Helper\n// Convert camelCase to spaced\nfunction camelToSpace(str) {\n    // split by ' ' at the uppercase letter\n    var split =  str.replace(/\\W+/g, ' ')\n            .replace(/([a-z\\d])([A-Z])/g, '$1 $2');\n    // Return with the first letter uppercase also\n    return split.charAt(0).toUpperCase() + split.slice(1);\n}\n\n// Function: get person data\nvar personPicture, personFullName, personBio;\nfunction GetPersonData(person){\n    personPicture = peopleData[person].picture;\n    personFullName = peopleData[person].name;\n    personBio = peopleData[person].about;\n};\n\n\n// Function to render the given 'name' as a new card in the page\nfunction renderNewPerson(name, linkedFrom) {\n\n    // console.log(\"Clicked: \"+name);\n\n    // add the clicked person to the peopleToShowArray array,\n    var object = {person: name, link: linkedFrom};\n    peopleToShowArray.push(object);\n\n    // Rebuild the page with the new peopleToShowArray values\n    buildPage();\n};\n\n// Function to check if a person is already on the page\nfunction alreadyOnPage(personToCheck) {\n\n    for( var i = 0; i < peopleToShowArray.length; i++){\n        if( peopleToShowArray[i].person == personToCheck){\n            // console.log(personToCheck + \" is already on the page.\");\n            return true;\n        }\n    }\n\n}\n\n\n\n// Component: page\nvar peopleToShowArray = [\n    {person: 'jeffBeck', link: 'georgeHarrison'}\n];\n// console.log(peopleToShowArray);\n\nvar OutputPage = React.createClass({\n\n    render: function() {\n\n        // Loop through the peopleToShowArray array and add the output of each person we need to output\n        var peopleList = [];\n        var lastPerson;\n        for(var i = 0; i < peopleToShowArray.length; i++){\n\n            lastPerson = peopleToShowArray[i].person;\n            var key = \"from-\"+peopleToShowArray[i].link+\"-to-\"+peopleToShowArray[i].person;\n\n            peopleList.push(<div className=\"row row--artist\">< OutputLink linkedFrom={peopleToShowArray[i].link} linkedTo={peopleToShowArray[i].person} /><OutputPerson key={key} name={peopleToShowArray[i].person} linkedFrom={peopleToShowArray[i].link}/></div>);\n        }\n        // console.log(lastPerson);\n\n        // Output everyone in the 'peopleList' array and the links to the 'lastPerson'\n        return (\n            <main>\n                {peopleList}\n                < OutputLinkOptions linkedFrom={lastPerson}/>\n                <div className=\"connections-counter\"><span>{peopleToShowArray.length - 1}</span> Connections</div>\n            </main>\n        );\n    }\n});\n\n\n\n\n// Component: output a person card\nvar OutputPerson = React.createClass({\n\n    getInitialState: function() {\n        return {\n            description: '',\n            name: ''\n        };\n    },\n\n    componentDidMount: function() {\n        var person = String(this.props.name);\n\n        // Run the call to wikipedia api and set the Reat component state with its response\n        wikiData(person, function(wikiDataResponse){\n            this.setState({\n                description: wikiDataResponse.description,\n                name: wikiDataResponse.name\n            });\n        }.bind(this));\n\n    },\n\n    render: function() {\n\n        // the name passed to this function\n        var person = String(this.props.name);\n        var linkedFrom = this.props.linkedFrom;\n        // console.log(person);\n\n        // Get the data for this person\n        GetPersonData(person);\n\n        return (\n                <article className=\"artist\">\n                    <div className=\"artist__image\">\n                        <img src={personPicture} />\n                    </div>\n                    <div className=\"artist__text\">\n                        <h1>{this.state.name}</h1>\n                        <p>{this.state.description}</p>\n                    </div>\n                </article>\n        );\n    }\n});\n\n\n// Component: link. The line that connects two artists\nvar OutputLink = React.createClass({\n\n    render: function() {\n        var linkedFrom = this.props.linkedFrom;\n        var linkedTo = this.props.linkedTo;\n        var linkDescription;\n        for(var i = 0; i < linksData.length; i++){\n\n            var peopleInLink = linksData[i].people;\n            // console.log(peopleInLink);\n\n            // Check if the two people we are linking are in this array\n            if( peopleInLink.indexOf(linkedFrom) != -1 && peopleInLink.indexOf(linkedTo) != -1){\n                // console.log(\"we have a link\");\n\n                linkDescription = linksData[i].description;\n            }\n\n        }\n\n        return <div className=\"link\"><div className=\"link__content\">{linkDescription}</div></div>;\n    }\n});\n\n\n// Component: link options\nvar OutputLinkOptions = React.createClass({\n\n    // Render a new person when one of the link options is clicked\n    clickEvent: function(linkingTo, linkedFrom) {\n        renderNewPerson(linkingTo, linkedFrom)\n    },\n\n    render: function() {\n\n        // Get the person we want to find links for\n        var linkedFrom = this.props.linkedFrom;\n        var links = [];\n        // console.log(linksData.length);\n\n        // Loop through all the relationships in relationships.json / linksData array\n        for(var i = 0; i < linksData.length; i++){\n\n            var peopleInLink = linksData[i].people;\n            // console.log(peopleInLink);\n\n            // Check if the person whos card we are building is in this entry of the json\n            if( peopleInLink.indexOf(linkedFrom) != -1 ){\n                // console.log(\"we have a link\");\n\n                // Loop through all the names in that link / json entry\n                for (var a = 0; a < peopleInLink.length; a++) {\n                    // the person we're linking too\n                    var linkingTo = peopleInLink[a];\n                    var itemClass = \"link-choices__item\";\n\n                    // Don't output the person as a link to themselves OR if they are already on the page\n                    if( linkingTo != linkedFrom ){\n\n                        // Get the data for this person\n                        GetPersonData(linkingTo);\n                        // Note: the onClick may look a bit odd, really its just `onClick=\"renderNewPerson(name)\"`. See http://stackoverflow.com/a/20446806/3098555\n                        var clickEvent = this.clickEvent.bind(null, linkingTo, linkedFrom);\n\n                        // Check the 'peopleToShowArray' to see if that person is already on the page. Remove the click to add person and add a modifier class for the css\n                        if( alreadyOnPage(linkingTo) ){\n                            clickEvent = \"\";\n                            itemClass += \" link-choices__item--disabled\";\n                        };\n\n                        var key = a + \"-link-to-\" + linkingTo + \"-from-\" + linkedFrom;\n\n                        // Add the markup\n                        links.push(<li key={key} onClick={clickEvent} className={itemClass}><p>{personFullName}</p><img src={personPicture}/></li>);\n                    }\n                }\n            }\n\n        }\n        // console.log(links);\n\n        return <section className=\"row row--links\"><h1>Choose A Link</h1><ul className=\"link-choices\">{links}</ul></section>\n    }\n})\n\n\n//\n// Initial page setup\n\nfunction buildPage(){\n    ReactDOM.render(\n        <OutputPage />,\n        document.getElementById('page')\n    );\n}\n\nbuildPage();\n"],"sourceRoot":"/source/"}